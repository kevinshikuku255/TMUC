let dotenv,express,createServer,mongoose,cors,models,schema,resolvers,createApolloServer;_59c‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_59c‍.w("express",[["default",["express"],function(v){express=v}]]);_59c‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);_59c‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_59c‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_59c‍.w("./models",[["default",["models"],function(v){models=v}]]);_59c‍.w("./schema",[["default",["schema"],function(v){schema=v}]]);_59c‍.w("./resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);_59c‍.w("./utils/apollo-server",[["createApolloServer",["createApolloServer"],function(v){createApolloServer=v}]]);








dotenv.config();


/* ----------Connect to database---------------------------------------------------------------- */
mongoose.set('useFindAndModify', false);
mongoose
  .connect(process.env.MONGO_URL, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    useFindAndModify: false,
    useCreateIndex: true,
    useNewUrlParser: true
  })
  .then(() => console.log('DB connected'))
  .catch(err => _59c‍.g.console.error(err));

// Initializes application
const app = express();


/**  Enables cors */
const corsOptions = {
  origin: "*",
  credentials: true  // <-- REQUIRED backend setting
};





// cors midleware
app.use(cors(corsOptions))

/* -----------Create a Apollo Server--------------------------------------------------------------- */
const server = createApolloServer(schema, resolvers, models);
server.applyMiddleware({
          app,
          path:'/graphql',
          cors:false ,
          bodyParserConfig: {
            limit:"50mb"
          }
          });


// Create http server and add subscriptions to it
const httpServer = createServer(app);

// Listen to HTTP and WebSocket server
const PORT = process.env.PORT || 5000;
httpServer.listen(PORT, () => {
  console.log(`tmuc_server server ready at http://localhost:${PORT}${server.graphqlPath}`);
});